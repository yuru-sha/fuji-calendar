services:
  # Nginx (ゲートウェイ + フロントエンド配信)
  gateway:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: fuji-calendar-gateway
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  # バックエンドAPI
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: fuji-calendar-backend
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_PATH=/app/data/fuji-calendar.db
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - REFRESH_SECRET=${REFRESH_SECRET:-your-super-secret-refresh-key-change-in-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ENABLE_FILE_LOGGING=${ENABLE_FILE_LOGGING:-true}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (キューシステム用)
  redis:
    image: redis:7-alpine
    container_name: fuji-calendar-redis
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  redis_data:
    driver: local
  app_data:
    driver: local
  app_logs:
    driver: local

networks:
  default:
    name: fuji-calendar-microservices